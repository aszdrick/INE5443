% Solve a Clustering Problem with a Self-Organizing Map
% Script generated by Neural Clustering app
% Created 17-May-2017 10:29:44
%

% ------ Dataset construction ------
x = csvread("datasets/glioma-daumas-duport.csv", 1, 0)';

% -------- Network parameters --------
params = struct(...
    'csv_data', x,...
    'num_classes', 4,...
    'train_percent', 0.75,...
    'dimensions', [20 20]...
);

[y, net] = kohonen(params);

% View the Network
%view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotsomtop(net)
%figure, plotsomnc(net)
%figure, plotsomnd(net)
%figure, plotsomplanes(net)
%figure, plotsomhits(net,x)
%figure, plotsompos(net,x)

function [y, net] = kohonen(params)
    % ---- Parameter evaluation ----
    data = params.csv_data;
    num_classes = params.num_classes;
    train_percent = params.train_percent;
    if (isfield(params, 'dimensions'))
        som_dimensions = params.dimensions;
    else
        som_dimensions = [10 10];
    end

    % ---- Dataset shuffling ----
    dimensions = size(data);
    num_values = dimensions(1); % one parameter value per row
    num_samples = dimensions(2); % one sample per column
    csv_data = data(:,randperm(num_samples)); % shuffles the samples

    % ------ Training/test set construction ------
    training_boundary = int64(num_samples * train_percent);
    training_set = csv_data(:,1:training_boundary);

    test_set = csv_data(:,(training_boundary + 1):end);
    test_set((num_values + 1 - num_classes):end,:) = 0;

    % ------ Self-Organizing Map construction ------
    net = selforgmap(som_dimensions, 100, 3, 'gridtop');

    % Train the Network
    [net,tr] = train(net,training_set);

    % Test the Network
    y = net(test_set);
end
